<%@ page language="java" 
contentType="text/html; charset=UTF-8" 
pageEncoding="UTF-8"%>

<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn" %>
<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>
<%-- ÏÑ∏ÏÖòÏóêÏÑú userNum Í∞ÄÏ†∏Ïò§Í∏∞ --%>
<c:set var="userNum" value="${userNum}" />
<c:choose>
    <c:when test="${empty shelfNum}">
        <c:set var="shelfNum" value="0" />
    </c:when>
    <c:otherwise>
        <c:set var="shelfNum" value="${shelfNum}" />
    </c:otherwise>
</c:choose>
<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <link rel="icon" href="img/pages/icon.png" type="image/png">
        <title>Î∂ÅÎ∂ÅÎ∂Å | ÎÇòÏùò ÏÑúÏû¨</title>
        <!-- Bootstrap Css -->
        <link rel="stylesheet" href="../vender/bootstrap/css/bootstrap.min.css">
        <!-- Icofont Css -->
        <link rel="stylesheet" href="../vender/icofont/icofont.min.css">
        <!-- AOS Css -->
        <link rel="stylesheet" href="../vender/aos/dist/aos.css">
        <!-- Remix Icons -->
        <link rel="stylesheet" href="../vender/remixicon/remixicon.css">
        <!-- Slick Slider Css -->
        <link rel="stylesheet" href="../vender/slick/slick/slick.css">
        <link rel="stylesheet" href="../vender/slick/slick/slick-theme.css">
        <!-- Custom Css -->
        <link rel="stylesheet" href="../css/style.css">
        <!-- Common Css -->
        <link rel="stylesheet" href="../css/common.css">
      <!--sweetalert-->
      <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.18/dist/sweetalert2.min.css">
      <!--user-myLibrary CSS-->
      <link rel="stylesheet" href="../css/user-myBookshelf.css">
      
      <!-- ********************JS SECTION************************ -->
      <!-- Bootsrap Bundle Js -->
      <script src="../vender/bootstrap/js/bootstrap.bundle.min.js"></script>
      <!-- Jquery Js -->
      <script src="../vender/jquery/jquery-3.6.4.min.js"></script>
      <!-- AOS Js -->
      <script src="../vender/aos/dist/aos.js"></script>
      <!-- Slick Slider Js -->
      <script src="../vender/slick/slick/slick.min.js"></script>
      <!-- Slick Js -->
      <script src="../js/slick.js"></script>
      <!-- Custom Js -->
      <script src="../js/script.js"></script>
      <!--Sweetalert2 -->
      <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
   
</head>
<body>
        
<div class="bg-elements elements-top-header position-relative">
    <!-- navbar -->
    <div class="elements-nav">
        <!-- bootom nav -->
        <%@ include file="../header.jsp" %>
   <!-- header -->
   </div>

<!-- ############################################## -->
<!-- tab panes -->
<div class="py-5 bg-light">
    <div class="container bshelf py-4">
        <h1 class="text-center mb-4">üìö ÎÇòÏùò ÏÑúÏû¨ üìö</h1>
		<div style="display: flex; justify-content: center; margin-bottom: 4rem;">
		  <h6>ÏùΩÏùÄ Ï±ÖÏùÑ ÌôïÏù∏ÌïòÍ≥†, ÏùΩÍ≥† ÏûàÎäî Ï±ÖÏùò ÏßÑÌñâ ÏÉÅÌô©ÏùÑ Í∏∞Î°ùÌïòÎ©∞ Î©îÎ™®ÎèÑ ÎÇ®Í∏∏ Ïàò ÏûàÏñ¥Ïöî.</h6>
		</div>
        <c:choose>
            <c:when test="${not empty sessionScope.userId}">
                <div class="row">
                    <div class="col-12">
                        <nav>
                            <div class="nav nav-tabs d-flex justify-content-center gap-2 nav-tabs-osahan" id="nav-tab" role="tablist">
                                <button class="nav-link active px-lg-4 py-lg-3" id="nav-all-tab" data-bs-toggle="tab" data-bs-target="#nav-all" type="button" role="tab" aria-controls="nav-all" aria-selected="true">Ï†ÑÏ≤¥</button>
                                <button class="nav-link px-lg-4 py-lg-3" id="nav-read-tab" data-bs-toggle="tab" data-bs-target="#nav-read" type="button" role="tab" aria-controls="nav-read" aria-selected="false">ÏùΩÏùÄ Ï±Ö</button>
                                <button class="nav-link px-lg-4 py-lg-3" id="nav-reading-tab" data-bs-toggle="tab" data-bs-target="#nav-reading" type="button" role="tab" aria-controls="nav-reading" aria-selected="false">ÏùΩÍ≥† ÏûàÎäî Ï±Ö</button>
                                <button class="nav-link px-lg-4 py-lg-3" id="nav-wishlist-tab" data-bs-toggle="tab" data-bs-target="#nav-wishlist" type="button" role="tab" aria-controls="nav-wishlist" aria-selected="false">ÏùΩÍ≥† Ïã∂ÏùÄ Ï±Ö</button>
                            </div>
                        </nav>
                        
                        <div class="tab-content bg-white p-lg-5 p-4 border-end border-bottom border-start" id="nav-tabContent">
                            <!-- Ï†ÑÏ≤¥ ÌÉ≠ Ìå¨ -->
                            <div class="tab-pane fade show active" id="nav-all" role="tabpanel" aria-labelledby="nav-all-tab">
                                <c:choose>
                                    <c:when test="${not empty characterStages}">
                                        <div id="character-stages" class="d-flex justify-content-between"> 
                                            <!--#[0809ÏàòÏ†ï] Ï§ëÏïô Ï†ïÎ†¨ÏùÑ ÏúÑÌï¥ ÌÅ¥ÎûòÏä§ Ï∂îÍ∞Ä Î∞è Ïä§ÌÉÄÏùº Î≥ÄÍ≤Ω-->
                                            <div class="character-section col-md-6 d-flex justify-content-center align-items-center" style="width: 45%;">
                                                <div class="stage-character p-3 text-center user-level-info">
                                                    <h3>ÌòÑÏû¨ ÎÇòÏùò                                              
                                                        <!-- 'Îã®Í≥Ñ' ÌÖçÏä§Ìä∏Ïóê Ìà¥ÌåÅ Ï∂îÍ∞Ä -->
                                                        <span class="custom-tooltip">Îã®Í≥Ñ
                                                               <span class="tooltiptext">
                                                                   1Îã®Í≥Ñ: 0-5Í∂å<br/>
                                                                   2Îã®Í≥Ñ: 6-10Í∂å<br/>
                                                                   3Îã®Í≥Ñ: 11-20Í∂å <br/>
                                                                   4Îã®Í≥Ñ: 21-35Í∂å<br/>
                                                                   5Îã®Í≥Ñ: 36-55Í∂å<br/>
                                                                   6Îã®Í≥Ñ: 56-80Í∂å<br/>
                                                                   7Îã®Í≥Ñ: 81-110Í∂å<br/>
                                                                   8Îã®Í≥Ñ: 111-145Í∂å<br/>
                                                                   9Îã®Í≥Ñ: 146Í∂å Ïù¥ÏÉÅ
                                                               </span> 
                                                         </span> :
                                                        <span id="characterStage">${characterStages[0].characterStage}</span></h3>
                                                  <!--  <p>Îã§Ïùå Îã®Í≥ÑÍπåÏßÄ ÎÇ®ÏùÄ Ï±Ö: <span id="booksToNextLevel">${booksToNextLevel}</span>Í∂å</p>-->
                                                    <div class="progress mb-3">
                                                        <div class="progress-bar" role="progressbar" 
                                                             style="width: ${(readBooksNum / nextLevelBooks) * 100}%;" 
                                                             aria-valuenow="${readBooksNum}" 
                                                             aria-valuemin="0" 
                                                             aria-valuemax="${nextLevelBooks}">
                                                            ${readBooksNum} / ${nextLevelBooks}
                                                        </div>
                                                    </div>
                                                    <img src="${characterStages[0].characterImage}" alt="Character Image" class="character-image img-fluid">
                                                    <p id="characterName"></p>
                                                </div>
                                            </div>
                                          <!--#[0809ÏàòÏ†ï] Î∂ÅÏÑπÏÖò Ï§ëÏïô Ï†ïÎ†¨ Î∞è Í∞ÑÍ≤© Ï°∞Ï†ï-->
                                          <div class="col-md-6 d-flex justify-content-center align-items-center">
                                             <div class="books-section">
                                               <div class="book-shelves">
                                                 <c:forEach var="book" items="${characterStages}" varStatus="status">
                                                   <c:if test="${status.index % 7 == 0 && status.index != 0}">
                                                     <div class="shelf-divider"></div>
                                                   </c:if>
                                                            <div class="book-spine book-color-${status.index % 4 + 1}">
                                                                <span class="book-title">
                                                                    <c:choose>
                                                                        <c:when test="${fn:length(book.bookTitle) > 10}">
                                                                            ${fn:substring(book.bookTitle, 0, 10)}...
                                                                        </c:when>
                                                                        <c:otherwise>
                                                                            ${book.bookTitle}
                                                                        </c:otherwise>
                                                                    </c:choose>
                                                                </span>
                                                            </div>
                                                        </c:forEach>
                                                    </div>
                                                  </div>
                                              </div>
                                          </div>
                                    </c:when>
                                    <c:otherwise>
                                        <div class="without-data">
                                            <p  class="no-books-message">ÏùΩÏùÄ Ï±ÖÏù¥ ÏóÜÏäµÎãàÎã§!</p>
                                            <div class="d-flex justify-content-center">
                                                <a href="/" class="btn btn-primary mx-2">Î≤†Ïä§Ìä∏ÏÖÄÎü¨ Íµ¨Í≤ΩÌïòÎü¨ Í∞ÄÍ∏∞</a>
                                                <a href="/pages/book-categorySearch" class="btn btn-secondary mx-2">Ïπ¥ÌÖåÍ≥†Î¶¨Î≥Ñ Ï±Ö Íµ¨Í≤ΩÌïòÍ∏∞</a>
                                                <a href="/pages/book-bookSearchResult" class="btn btn-success mx-2">ÏùΩÍ≥† Ïã∂ÏùÄ Ï±Ö Îì±Î°ùÌïòÍ∏∞</a>                                           
                                            </div>
                                        </div>
                                    </c:otherwise>
                                </c:choose>
                            </div>
                     
                            <!-- ÏùΩÏùÄ Ï±Ö ÌÉ≠ Ìå¨ -->
                            <div class="tab-pane fade" id="nav-read" role="tabpanel" aria-labelledby="nav-read-tab">
                                <div class="text-end mt-3">
                                    <div class="btn-group" role="group">
                                        <input type="radio" class="btn-check" name="sort-read" id="startDateRead" autocomplete="off" checked>
                                        <label class="btn btn-outline-secondary btn-sm" for="startDateRead">ÏãúÏûëÏùºÏàú</label>
                                        <input type="radio" class="btn-check" name="sort-read" id="endDateRead" autocomplete="off">
                                        <label class="btn btn-outline-secondary btn-sm" for="endDateRead">Ï¢ÖÎ£åÏùºÏàú</label>
                                    </div>
                                </div>
								<div id="read-content">
                                <%@ include file="readBooksTab.jsp" %>
								</div>
                            </div>

                            <!-- ÏùΩÍ≥† ÏûàÎäî Ï±Ö ÌÉ≠ Ìå¨ -->
                            <div class="tab-pane fade" id="nav-reading" role="tabpanel" aria-labelledby="nav-reading-tab" tabindex="0">
                                <div class="text-end mt-3">
                                    <div class="btn-group" role="group">
                                        <input type="radio" class="btn-check" name="sort-reading" id="startDateReading" autocomplete="off" checked>
                                        <label class="btn btn-outline-secondary btn-sm" for="startDateReading">ÏãúÏûëÏùºÏàú</label>
                                        <input type="radio" class="btn-check" name="sort-reading" id="readCountReading" autocomplete="off">
                                        <label class="btn btn-outline-secondary btn-sm" for="readCountReading">ÎßéÏù¥ ÏùΩÏùÄ Ïàú</label>
                                    </div>
                                </div>
								<div id="reading-content">
                                <%@ include file="readingBooksTab.jsp" %>
								</div>
                            </div>

                            <!-- ÏùΩÍ≥† Ïã∂ÏùÄ Ï±Ö ÌÉ≠ Ìå¨ -->
                            <div class="tab-pane fade" id="nav-wishlist" role="tabpanel" aria-labelledby="nav-wishlist-tab" tabindex="0">
                                <div class="text-end mt-3">
                                    <div class="btn-group" role="group">
                                        <input type="radio" class="btn-check" name="sort-wishlist" id="alphabeticalWishlist" autocomplete="off" checked>
                                        <label class="btn btn-outline-secondary btn-sm" for="alphabeticalWishlist">Í∞ÄÎÇòÎã§Ïàú</label>
                                        <input type="radio" class="btn-check" name="sort-wishlist" id="addedDateWishlist" autocomplete="off">
                                        <label class="btn btn-outline-secondary btn-sm" for="addedDateWishlist">Ï∂îÍ∞ÄÎêú ÎÇ†ÏßúÏàú</label>
                                    </div>
                                </div>
								<div id="wishlist-content">
                                <%@ include file="wishlistBooksTab.jsp" %>
								</div>
                            </div>   
                        
                        </div>
                    </div>
                </div>
            </c:when>
            <c:otherwise>
                <div class="text-center py-5">
                    <h3 class="text-muted">Î°úÍ∑∏Ïù∏ ÌõÑ Ïù¥Ïö©ÌïòÏã§ Ïàò ÏûàÏäµÎãàÎã§.</h3>
                </div>
                <div id="without-data">
                    <div class="container text-center mt-4">
                        <a href="${pageContext.request.contextPath}/pages/login" class="btn btn-primary btn-lg">Î°úÍ∑∏Ïù∏ ÌïòÎü¨ Í∞ÄÍ∏∞</a>
                    </div>
                </div>
            </c:otherwise>
        </c:choose>
    </div>
</div>
</div>
<!-- Î™®Îã¨ Ï∞Ω HTML -->
<c:if test="${not empty sessionScope.userId}">
   <div class="modal fade" id="memoModal1" tabindex="-1" aria-labelledby="memoModalLabel" aria-hidden="true">
      <div class="modal-dialog">
         <div class="modal-content">
            <div class="modal-header">
               <h5 class="modal-title" id="memoModalLabel">Î©îÎ™® ÏûÖÎ†•</h5>
               <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                  <span aria-hidden="true">√ó</span>
               </button>
            </div>
            <div class="modal-body">
               <textarea class="form-control" id="memoContent" rows="5" placeholder="Î©îÎ™®Î•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî"></textarea>
            </div>
            <div class="modal-footer">
               <button type="button" class="btn btn-secondary" data-dismiss="modal" style="width: 97px; height: 50px; margin-right: 10px;">Îã´Í∏∞</button>
               <input type="hidden" id="shelfNum" name="shelfNum" value="${shelfNum}">
               <input type="hidden" id="userNum" name="userNum" value="${sessionScope.userNum}">
               <button type="button" class="btn btn-primary" id="saveMemoButton" style=" height: 50px; margin-left: 10px;">Ï†ÄÏû•</button>
            </div>
         </div>
      </div>
   </div>
</c:if>
        
                              
         <!-- Nav Sidebar -->
         <%@ include file="../navSidebar.jsp" %>
         <!-- Ìë∏ÌÑ∞ Ìè¨Ìï® -->
         <%@ include file="../footer.jsp" %>
         
       <script>
		// Ï†ÑÏó≠ Î≥ÄÏàòÎ°ú Ï±Ö Î™©Î°ù Î∞∞Ïó¥ ÏÑ†Ïñ∏
		let readBooks, readingBooks, wishBooks;
		console.log("Ï†ÑÏó≠ Î≥ÄÏàò ÌôïÏù∏: ", readBooks,readingBooks, wishBooks);
		
       $(document).ready(function() {
         
         // Î™®Îì† Ìà¥ÌåÅ Ï¥àÍ∏∞Ìôî
                var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
                var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                    return new bootstrap.Tooltip(tooltipTriggerEl)
                })
               
               
               
           var userNum = $('#userNum').val();
           
           console.log('userNum Î∞è shelfNum:', userNum);

           // Ï∫êÎ¶≠ÌÑ∞ Ïù¥Î¶Ñ ÌëúÏãú 
           const characterNames = [
               "Ï≤†Ìë∏Îçï ÏïÑÍ∏∞ÏΩîÍ∏∞",
               "ÏÇ∞Ï±Ö ÏïÑÍ∏∞ÏΩîÍ∏∞",
               "Ïù¥Ï°±Î≥¥Ìñâ ÏïÑÍ∏∞ÏΩîÍ∏∞",
               "ÎÖ∏Î¶áÎÖ∏Î¶á ÏóâÎç© ÏΩîÍ∏∞",
               "ÎÖ∏Î¶áÎÖ∏Î¶á Ìú¥Ïãù ÏΩîÍ∏∞",
               "ÎÖ∏Î¶áÎÖ∏Î¶á Ï≤†Ìë∏Îçï ÏΩîÍ∏∞",
               "Îä†Î¶Ñ ÏÇ∞Ï±Ö ÏΩîÍ∏∞",
               "Îä†Î¶Ñ ÏßàÏ£º ÏΩîÍ∏∞",
               "Îä†Î¶Ñ Ï†ïÎ≥µ ÏΩîÍ∏∞"
           ];

           const characterStage = document.getElementById('characterStage').textContent;
           const characterNameElement = document.getElementById('characterName');

           // Î¨∏ÏûêÏó¥ÏóêÏÑú Ïà´ÏûêÎßå Ï∂îÏ∂ú
           const stageNumber = parseInt(characterStage.replace(/[^0-9]/g, ''));

           if (stageNumber > 0 && stageNumber <= characterNames.length) {
               characterNameElement.textContent = characterNames[stageNumber - 1];
           } else {
               characterNameElement.textContent = "Ïïå Ïàò ÏóÜÎäî Îã®Í≥Ñ";
           }

           // Î©îÎ™® Î≤ÑÌäº ÌÅ¥Î¶≠ Ïù¥Î≤§Ìä∏ Ï≤òÎ¶¨
           let currentBookTitle;
           let shelfNum;  // #[ÏàòÏ†ï] Ïô∏Î∂ÄÏóêÏÑú ÏÇ¨Ïö©Ìï† Ïàò ÏûàÎèÑÎ°ù Î≥ÄÏàòÎ•º Ï†ÑÏó≠ÏúºÎ°ú ÏÑ§Ï†ï

           $(document).on('click', '.memo-btn', function() {
               currentBookTitle = $(this).data('book-title');
               shelfNum = $(this).data('shelf-num'); // MODIFIED: Î≤ÑÌäºÏóêÏÑú shelfNum Í∞ÄÏ†∏Ïò§Í∏∞
               $('#memoContent').val(''); // Î™®Îã¨ Ïó¥ Îïå ÏûÖÎ†• ÌïÑÎìú Ï¥àÍ∏∞Ìôî
               console.log("ÏÑ†ÌÉùÎêú Ï±Ö Ï†úÎ™©:", currentBookTitle);
               console.log("ÏÑ†ÌÉùÎêú Ï±ÖÏû• Î≤àÌò∏:", shelfNum); // MODIFIED: shelfNum Î°úÍπÖ
           });

           // Î™®Îã¨ Ï†ÄÏû• Î≤ÑÌäº ÌÅ¥Î¶≠ Ïù¥Î≤§Ìä∏ Ï≤òÎ¶¨
           $('#saveMemoButton').on('click', function() {
               var memoContent = $('#memoContent').val().trim(); // ÏïûÎí§ Í≥µÎ∞± Ï†úÍ±∞

               if (!currentBookTitle) {
                   console.error('Ï±Ö Ï†úÎ™©Ïù¥ ÏÑ†ÌÉùÎêòÏßÄ ÏïäÏïòÏäµÎãàÎã§.');
                   alert('Ï±ÖÏùÑ ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî.');
                   return;
               }

               if (memoContent === '') {
                   alert('Î©îÎ™® ÎÇ¥Ïö©ÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.');
                   return;
               }

               console.log('User Number:', userNum);
               console.log('Memo Content:', memoContent);
               console.log('Shelf Number:', shelfNum);

               $.ajax({
                   url: '/saveMemo',
                   type: 'POST',
                   contentType: 'application/json',
                   data: JSON.stringify({
                       memoContent: memoContent,
                       userNum: userNum,
                       shelfNum: shelfNum,
                       bookTitle: currentBookTitle
                   }),
                   success: function(response) {
                       console.log('ÏÑúÎ≤Ñ ÏùëÎãµ:', response);
                       Swal.fire({ 
                           icon: 'success',
                           title: 'Ï†ÄÏû• ÏôÑÎ£å',
                           text: 'Î©îÎ™®Í∞Ä Ï†ÄÏû•ÎêòÏóàÏäµÎãàÎã§.',
                           confirmButtonText: 'ÌôïÏù∏'
                       });
                       $('#memoContent').val('');
                       $('#memoModal1').modal('hide');
                   },
                   error: function(xhr, status, error) {
                       console.error('Ï†ÄÏû• Ïã§Ìå®:', error);
                       Swal.fire({ 
                           icon: 'error',
                           title: 'Ï†ÄÏû• Ïã§Ìå®',
                           text: 'Ïû†Ïãú ÌõÑ Îã§Ïãú ÏãúÎèÑÌï¥Ï£ºÏÑ∏Ïöî.',
                           confirmButtonText: 'ÌôïÏù∏'
                       });
                   }
               });
           });

           // Î™®Îã¨ Îã´Í∏∞ Î≤ÑÌäº ÌÅ¥Î¶≠ Ïù¥Î≤§Ìä∏ Ï≤òÎ¶¨ 
           $('#memoModal1').on('hide.bs.modal', function (e) {
               if ($('#memoContent').val().trim() !== '') {
                   e.preventDefault(); // Î™®Îã¨ Îã´Í∏∞ ÏùºÏãú Ï§ëÏßÄ
                   Swal.fire({
                       title: 'ÏûëÏÑ± Ï§ëÏù∏ ÎÇ¥Ïö©Ïù¥ ÏûàÏäµÎãàÎã§',
                       text: "Ï†ïÎßêÎ°ú Îã´ÏúºÏãúÍ≤†ÏäµÎãàÍπå?",
                       icon: 'warning',
                       showCancelButton: true,
                       confirmButtonColor: '#3085d6',
                       cancelButtonColor: '#d33',
                       confirmButtonText: 'Ïòà',
                       cancelButtonText: 'ÏïÑÎãàÏò§'
                   }).then((result) => {
                       if (result.isConfirmed) {
                           $('#memoContent').val(''); // ÌôïÏù∏ÏùÑ ÎàÑÎ•¥Î©¥ ÌÖçÏä§Ìä∏ ÏûÖÎ†•Ï∞Ω ÎπÑÏö∞Í∏∞
                           $('#memoModal1').modal('hide'); // Î™®Îã¨ Îã´Í∏∞
                       }
                   });
               }
           });

		   // ÏÇ≠Ï†ú Î≤ÑÌäº ÌÅ¥Î¶≠ Ïù¥Î≤§Ìä∏ Ï≤òÎ¶¨
		   $(document).on('click', '.delete-book', function() {
		       console.log("ÏÇ≠Ï†ú Î≤ÑÌäº ÌÅ¥Î¶≠Îê®");
		       var shelfNum = $(this).data('shelf-num');
		       var bookNum = $(this).data('book-num');
		       var $bookItem = $(this).closest('.book-item'); // ÏÇ≠Ï†úÌï† Ï±Ö Ìï≠Î™©

		       console.log("ÏÇ≠Ï†úÌï† Ï±ÖÏùò shelfNum + bookNum:", shelfNum, bookNum);
		       
		       Swal.fire({
		           title: 'Ï†ïÎßê ÏÇ≠Ï†úÌïòÏãúÍ≤†ÏäµÎãàÍπå?',
		           icon: 'warning',
		           showCancelButton: true,
		           confirmButtonColor: '#e74c3c',
		           cancelButtonColor: '#3085d6',
		           confirmButtonText: 'ÎÑ§',
		           cancelButtonText: 'ÏïÑÎãàÏò§'
		       }).then((result) => {
		           if (result.isConfirmed) {
		               $.ajax({
		                   url: '/deleteBook',
		                   type: 'POST',
		                   data: { shelfNum: shelfNum, bookNum: bookNum },
						   success: function(result) {
				                 if(result === 'success') {
				                     $bookItem.fadeOut(300, function() {
				                         $(this).remove();
				                         if ($('.book-item').length === 0) {
				                             showNoBookMessage();
				                         }
				                         updateBookArrays(); // Ï±Ö Î™©Î°ù Î∞∞Ïó¥ Í∞±Ïã†
				                     });
				                     Swal.fire('ÏÇ≠Ï†ú ÏôÑÎ£å', 'Ï±ÖÏù¥ ÏÇ≠Ï†úÎêòÏóàÏäµÎãàÎã§.', 'success');
				                 } else {
				                     Swal.fire('ÏÇ≠Ï†ú Ïã§Ìå®', 'Ï±Ö ÏÇ≠Ï†úÏóê Ïã§Ìå®ÌñàÏäµÎãàÎã§.', 'error');
				                 }
				             },
		                   error: function() {
		                       Swal.fire('Ïò§Î•ò', 'Ïû†Ïãú ÌõÑ Îã§Ïãú ÏãúÎèÑÌï¥Ï£ºÏÑ∏Ïöî.', 'error');
		                   }
		               });
		           }
		       });
		   });
		   /*
           // ÏÇ≠Ï†ú Î≤ÑÌäº ÌÅ¥Î¶≠Ïãú
           $(document).on('click', '.delete-book', function() {
               console.log("ÏÇ≠Ï†ú Î≤ÑÌäº ÌÅ¥Î¶≠Îê®");
               var shelfNum = $(this).data('shelf-num');
               var bookNum = $(this).data('book-num');
               console.log("ÏÇ≠Ï†úÌï† Ï±ÖÏùò shelfNum + bookNum:", shelfNum, bookNum);
               
               Swal.fire({
                   title: 'Ï†ïÎßê ÏÇ≠Ï†úÌïòÏãúÍ≤†ÏäµÎãàÍπå?',
                   icon: 'warning',
                   showCancelButton: true,
                   confirmButtonColor: '#e74c3c',
                   cancelButtonColor: '#3085d6',
                   confirmButtonText: 'ÎÑ§',
                   cancelButtonText: 'ÏïÑÎãàÏò§'
               }).then((result) => {
                   if (result.isConfirmed) {
                       $.ajax({
                           url: '/deleteBook',
                           type: 'POST',
                           data: { shelfNum: shelfNum, bookNum: bookNum },
                           success: function(result) {
                               if(result === 'success') {
                                   Swal.fire(
                                       'ÏÇ≠Ï†ú ÏôÑÎ£å',
                                       'Ï±ÖÏù¥ ÏÇ≠Ï†úÎêòÏóàÏäµÎãàÎã§.',
                                       'success'
                                   ).then(() => {
                                       refreshCurrentTab(); // ÌòÑÏû¨ ÌÉ≠ ÏÉàÎ°úÍ≥†Ïπ®
                                   });
                               } else {
                                   Swal.fire(
                                       'ÏÇ≠Ï†ú Ïã§Ìå®',
                                       'Ï±Ö ÏÇ≠Ï†úÏóê Ïã§Ìå®ÌñàÏäµÎãàÎã§.',
                                       'error'
                                   );
                               }
                           },
                           error: function() {
                               Swal.fire(
                                   'Ïò§Î•ò',
                                   'Ïû†Ïãú ÌõÑ Îã§Ïãú ÏãúÎèÑÌï¥Ï£ºÏÑ∏Ïöî.',
                                   'error'
                               );
                           }
                       });
                   }
               });
           });
		   */
		   
		   function showNoBookMessage() {
		       var noBookHtml = `
		           <div class="without-data">
		               <div class="d-flex justify-content-center align-items-center" style="height: 100px;">
		                   <h4 class="no-books-message text-center m-0">Ï±ÖÏù¥ ÏóÜÏäµÎãàÎã§!</h4>
		               </div>
		               <div class="d-flex justify-content-center">
		                   <a href="/" class="btn btn-primary mx-2">Î≤†Ïä§Ìä∏ÏÖÄÎü¨ Íµ¨Í≤ΩÌïòÎü¨ Í∞ÄÍ∏∞</a>
		                   <a href="/pages/book-categorySearch" class="btn btn-secondary mx-2">Ïπ¥ÌÖåÍ≥†Î¶¨Î≥Ñ Ï±Ö Íµ¨Í≤ΩÌïòÍ∏∞</a>
		                   <a href="/pages/book-bookSearchResult" class="btn btn-success mx-2">ÏùΩÍ≥† Ïã∂ÏùÄ Ï±Ö Îì±Î°ùÌïòÍ∏∞</a>
		               </div>
		           </div>
		       `;

		       // ÌòÑÏû¨ ÌôúÏÑ±ÌôîÎêú ÌÉ≠ Ï∞æÍ∏∞
		       var activeTabId = $('.nav-link.active').attr('id');
		       var activeTabContentId = activeTabId.replace('-tab', '');
		       
		       // ÌôúÏÑ±ÌôîÎêú ÌÉ≠Ïùò Ï±Ö Î™©Î°ù Ïª®ÌÖåÏù¥ÎÑàÏóê Î©îÏãúÏßÄ ÏÇΩÏûÖ
		       $(`#${activeTabContentId} [id$="-list"]`).html(noBookHtml);
		   }
		   
		   // ÌòÑÏû¨ ÌÉ≠Ïùò ÎÇ¥Ïö©Îßå ÏÉàÎ°úÍ≥†Ïπ®ÌïòÎäî Ìï®Ïàò
		   function refreshCurrentTab() {
		       var activeTabId = $('.nav-link.active').attr('id');
		       var activeTabContentId = activeTabId.replace('-tab', '');
		       
		       var $activeTab = $('#' + activeTabContentId);
		       
		       // Ï†ïÎ†¨ Î≤ÑÌäºÏùÑ Ìè¨Ìï®Ìïú Ï†ÑÏ≤¥ ÏÉÅÎã® ÏòÅÏó≠ÏùÑ Ï†ÄÏû•
		       var $topSection = $activeTab.children().first().clone();

		       $.ajax({
		           url: '/refreshTab',
		           type: 'GET',
		           data: { tabId: activeTabContentId },
		           success: function(response) {
		               // ÏÉàÎ°úÏö¥ ÎÇ¥Ïö©ÏúºÎ°ú ÌÉ≠ÏùÑ ÏóÖÎç∞Ïù¥Ìä∏ÌïòÎêò, ÏÉÅÎã® ÏòÅÏó≠ÏùÄ Ï†úÏô∏
		               var $newContent = $(response);
		               $newContent.children().first().remove(); // ÏÉà Ïª®ÌÖêÏ∏†Ïùò ÏÉÅÎã® ÏòÅÏó≠ Ï†úÍ±∞
		               
		               // Í∏∞Ï°¥ ÏÉÅÎã® ÏòÅÏó≠Í≥º ÏÉà Ïª®ÌÖêÏ∏†Î•º Í≤∞Ìï©
		               $activeTab.html('').append($topSection).append($newContent);
		               
		               // Ï†ïÎ†¨ Ïù¥Î≤§Ìä∏ Î¶¨Ïä§ÎÑà Îã§Ïãú Ï∂îÍ∞Ä
		               addSortListeners($activeTab.find('input[name^="sort-"]'));
		           },
		           error: function() {
		               console.error('ÌÉ≠ ÏÉàÎ°úÍ≥†Ïπ® Ïã§Ìå®');
		           }
		       });
		   }

		   /*
           // ÌòÑÏû¨ ÌÉ≠Ïùò ÎÇ¥Ïö©Îßå ÏÉàÎ°úÍ≥†Ïπ®ÌïòÎäî Ìï®Ïàò
           function refreshCurrentTab() {
               var activeTabId = $('.nav-link.active').attr('id');
               var activeTabContentId = activeTabId.replace('-tab', '');
               
               $.ajax({
                   url: '/refreshTab',
                   type: 'GET',
                   data: { tabId: activeTabContentId },
                   success: function(response) {
                       $('#' + activeTabContentId).html(response);
                   },
                   error: function() {
                       console.error('ÌÉ≠ ÏÉàÎ°úÍ≥†Ïπ® Ïã§Ìå®');
                   }
               });
           }
		   */

           // ÏùΩÍ≥† ÏûàÎäî Ï±ÖÏóêÏÑú ÏàòÏ†ï ÌÅ¥Î¶≠Ïãú
           let currentShelfNum;
           let totalPages;
           let bookNum;
           
           // #[ÏàòÏ†ï] ÏùΩÍ≥† ÏûàÎäî Ï±Ö ÏàòÏ†ï Î≤ÑÌäº ÌÅ¥Î¶≠ Ïù¥Î≤§Ìä∏
           $(document).on('click', '.edit-progress', function() { // #[ÏàòÏ†ï] Ïù¥Î≤§Ìä∏ ÏúÑÏûÑ Î∞©ÏãùÏúºÎ°ú Î≥ÄÍ≤Ω
               currentShelfNum = $(this).data('shelf-num');
               totalPages = $(this).data('book-page');
               bookNum = $(this).data('book-num');
               let $bookItem = $(this).closest('.book-item');
               let startDate = $bookItem.find('.start-date').text();
               let currentReadPages = $bookItem.find('.book-progress').text().match(/(\d+)\/(\d+)/)[1];
               
               console.log('ÏàòÏ†ï Î≤ÑÌäº ÌÅ¥Î¶≠:', { shelfNum: currentShelfNum, totalPages, bookNum, startDate, currentReadPages });

               $('#editStartDate').val(startDate);
               $('#editPageInput').val(currentReadPages);
               $('#editProgressModal').modal('show');
           });

         // ##[ÏàòÏ†ï] Ï†ÄÏû• Î≤ÑÌäº ÌÅ¥Î¶≠ Ïù¥Î≤§Ìä∏
         $('#saveProgress').on('click', function(e) {
             e.preventDefault();
             let newStartDate = $('#editStartDate').val();
             let newReadPages = parseInt($('#editPageInput').val());
             let isCompleted = newReadPages === totalPages;
             
             console.log('Ï†ÄÏû• Î≤ÑÌäº ÌÅ¥Î¶≠:', { newStartDate, newReadPages, totalPages, currentShelfNum });

             if (newReadPages > totalPages) {
                 Swal.fire({
                     icon: 'error',
                     title: 'Ïò§Î•ò',
                     text: 'Ï¥ù ÌéòÏù¥ÏßÄ ÏàòÎ•º Ï¥àÍ≥ºÌï† Ïàò ÏóÜÏäµÎãàÎã§.',
                 });
                 return;
             }
             
             // ##[ÏàòÏ†ï] Îç∞Ïù¥ÌÑ∞ Í∞ùÏ≤¥ ÏÉùÏÑ±
             let data = {
                 shelfNum: currentShelfNum,
                 readPages: newReadPages,
                 startDate: newStartDate,
                 isCompleted: isCompleted,
				 totalPages: totalPages  // totalPages Ï∂îÍ∞Ä
             };
             
             // ##[ÏàòÏ†ï] Ï±ÖÏùÑ ÏôÑÎèÖÌïú Í≤ΩÏö∞ÏóêÎßå Î≥ÑÏ†ê ÏûÖÎ†• Î™®Îã¨ ÌëúÏãú Î∞è Îç∞Ïù¥ÌÑ∞Ïóê Ï∂îÍ∞Ä
             if (isCompleted) {
                 Swal.fire({
                     title: 'Ï±ÖÏùÑ Îã§ ÏùΩÏúºÏÖ®Íµ∞Ïöî!',
                     text: 'Ïù¥ Ï±ÖÏóê ÎåÄÌïú Î≥ÑÏ†êÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.',
                     input: 'range',
                     inputAttributes: {
                         min: 1,
                         max: 5,
                         step: 1
                     },
                     inputValue: 3,
                     showCancelButton: true,
                     confirmButtonText: 'ÌôïÏù∏',
                     cancelButtonText: 'Ï∑®ÏÜå'
                 }).then((result) => {
                     if (result.isConfirmed) {
                         data.rating = result.value;
                         saveBookProgress(data);
                     }
                 });
             } else {
                 saveBookProgress(data);
             }
         });
		 
		 function saveBookProgress(data) {
		     $.ajax({
		         url: '/updateBooks',
		         type: 'POST',
		         contentType: 'application/json',
		         data: JSON.stringify(data),
		         success: function(response) {
		             if(response.status === "success") {
		                 Swal.fire({
		                     icon: 'success',
		                     title: 'Ï†ÄÏû• ÏôÑÎ£å',
		                     text: response.message
		                 });
		                 $('#editProgressModal').modal('hide');
		                 // Ï¶âÏãú UI ÏóÖÎç∞Ïù¥Ìä∏
		                 updateBookItem(data.shelfNum, data.startDate, data.readPages, totalPages);
		                 // refreshAllTabs() Ìò∏Ï∂ú Ï†úÍ±∞
		             } else {
		                 Swal.fire({
		                     icon: 'error',
		                     title: 'Ï†ÄÏû• Ïã§Ìå®',
		                     text: response.message
		                 });
		             }
		         },
		         error: function(xhr, status, error) {
		             Swal.fire({
		                 icon: 'error',
		                 title: 'Ïò§Î•ò',
		                 text: 'ÏÑúÎ≤ÑÏôÄÏùò ÌÜµÏã† Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.'
		             });
		             console.error('Error:', error);
		         }
		     });
		 }

		 /*
         // ##[ÏàòÏ†ï] Ï±Ö ÏßÑÌñâ ÏÉÅÌÉú Ï†ÄÏû• Ìï®Ïàò
         function saveBookProgress(data) {
             $.ajax({
                 url: '/updateBooks',
                 type: 'POST',
                 contentType: 'application/json',
                 data: JSON.stringify(data),
                 success: function(response) {
                     if(response.status === "success") {
                         Swal.fire({
                             icon: 'success',
                             title: 'Ï†ÄÏû• ÏôÑÎ£å',
                             text: response.message
                         });
                         $('#editProgressModal').modal('hide');
                         refreshAllTabs(); // Î™®Îì† ÌÉ≠ ÏÉàÎ°úÍ≥†Ïπ®
                     } else {
                         Swal.fire({
                             icon: 'error',
                             title: 'Ï†ÄÏû• Ïã§Ìå®',
                             text: response.message
                         });
                     }
                 },
                 error: function(xhr, status, error) {
                     Swal.fire({
                         icon: 'error',
                         title: 'Ïò§Î•ò',
                         text: 'ÏÑúÎ≤ÑÏôÄÏùò ÌÜµÏã† Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.'
                     });
                     console.error('Error:', error);
                 }
             });
         }
		 */
         
         function refreshAllTabs() {
             refreshTab('nav-read');  // ÏùΩÏùÄ Ï±Ö ÌÉ≠
             refreshTab('nav-reading');  // ÏùΩÍ≥† ÏûàÎäî Ï±Ö ÌÉ≠
             refreshTab('nav-wishlist');  // ÏùΩÍ≥† Ïã∂ÏùÄ Ï±Ö ÌÉ≠
         }
		 

		 // Ï±Ö Î™©Î°ù Î∞∞Ïó¥ÏùÑ Í∞±Ïã†ÌïòÎäî Ìï®Ïàò
		 function updateBookArrays() {
		     // jQueryÎ•º ÏÇ¨Ïö©ÌïòÏó¨ ÏöîÏÜå ÏÑ†ÌÉù
		     readBooks = $('#nav-read .read-books').toArray();
		     readingBooks = $('#nav-reading .reading-books').toArray();
		     wishBooks = $('#nav-wishlist .wish-books').toArray();
		     console.log("Book arrays updated:", { readBooks, readingBooks, wishBooks });
		 }
         
         /* function refreshTab(tabId) {
             $.ajax({
                 url: '/refreshTab',
                 type: 'GET',
                 data: { tabId: tabId },
                 success: function(response) {
                     $('#' + tabId).html(response);
                 },
                 error: function() {
                     console.error(tabId + ' ÌÉ≠ ÏÉàÎ°úÍ≥†Ïπ® Ïã§Ìå®');
                 }
             });
         } */
		 // ÌÉ≠ ÏÉàÎ°úÍ≥†Ïπ® Ìï®Ïàò ÏàòÏ†ï
		    function refreshTab(tabId) {
		        $.ajax({
		            url: '/refreshTab',
		            type: 'GET',
		            data: { tabId: tabId },
		            success: function(response) {
		                let $tab = $(`#${tabId}`);
		                // Ï†ïÎ†¨ Î≤ÑÌäº Î≥¥Ï°¥
		                let sortButtons = $tab.find('.btn-group').detach();
		                
		                // ÌÉ≠ ÎÇ¥Ïö© ÏóÖÎç∞Ïù¥Ìä∏
		                $tab.html(response);
		                
		                // Ï†ïÎ†¨ Î≤ÑÌäº Îã§Ïãú Ï∂îÍ∞Ä
		                $tab.prepend(sortButtons);
		                
		                // Ï±Ö Î™©Î°ù Î∞∞Ïó¥ Í∞±Ïã†
		                updateBookArrays();
		                
		                // Ï†ïÎ†¨ Ïù¥Î≤§Ìä∏ Î¶¨Ïä§ÎÑà Îã§Ïãú Ï∂îÍ∞Ä
		                addSortListeners($tab.find('input[name^="sort-"]'));
		            },
		            error: function(xhr, status, error) {
		                console.error(`${tabId} ÌÉ≠ ÏÉàÎ°úÍ≥†Ïπ® Ïã§Ìå®:`, error);
		            }
		        });
		    }
			
			// Ï±Ö Ìï≠Î™© UI ÏóÖÎç∞Ïù¥Ìä∏ Ìï®Ïàò
			function updateBookItem(shelfNum, startDate, readPages, totalPages) {
			    console.log('Updating book item:', { shelfNum, startDate, readPages, totalPages });

			    // Î™®Îì† Í∞ÄÎä•Ìïú ÏÑ†ÌÉùÏûêÎ•º ÏãúÎèÑÌï©ÎãàÎã§.
			    let $bookItem = $(`.book-item[data-shelf-num="${shelfNum}"]`);
			    if ($bookItem.length === 0) {
			        $bookItem = $(`.reading-books[data-shelf-num="${shelfNum}"]`);
			    }
			    if ($bookItem.length === 0) {
			        $bookItem = $(`[data-shelf-num="${shelfNum}"]`);
			    }

			    console.log('Found book items:', $bookItem.length);

			    if ($bookItem.length > 0) {
			        let progress = (readPages / totalPages) * 100;
			        let formattedProgress = progress.toFixed(2);

			        $bookItem.each(function() {
			            console.log('Updating item:', this);
			            $(this).find('.start-date').text(startDate);
			            $(this).find('.progress-bar')
			                .css('width', `${progress}%`)
			                .attr('aria-valuenow', progress);
			            $(this).find('.book-progress').html(
			                `${formattedProgress}% (${readPages}/${totalPages} ÌéòÏù¥ÏßÄ)`
			            );
			        });

			        console.log('Book item updated:', shelfNum);
			    } else {
			        console.log('Book item not found:', shelfNum);
			        console.log('All book items:', $('.book-item, .reading-books').length);
			        $('.book-item, .reading-books').each(function() {
			            console.log('Item:', this, 'data-shelf-num:', $(this).data('shelf-num'));
			        });
			    }
			}
			/*
		//0813[1]
		 function updateBookItem(shelfNum, startDate, readPages, totalPages) {
		     if (shelfNum != null && startDate != null && !isNaN(readPages) && !isNaN(totalPages) && totalPages > 0) {
		         let progress = (readPages / totalPages) * 100;
		         let formattedProgress = progress.toFixed(2);

		         let $bookItem = $(`.reading-books[data-shelf-num="${shelfNum}"]`);
		         if ($bookItem.length > 0) {
		             $bookItem.find('.start-date').text(startDate);
		             $bookItem.find('.progress-bar')
		                 .css('width', `${progress}%`)
		                 .attr('aria-valuenow', progress);
		             $bookItem.find('.book-progress').html(
		                 `${formattedProgress}% (${readPages}/${totalPages} ÌéòÏù¥ÏßÄ)`
		             );
		             console.log('Book item updated:', shelfNum);
		         } else {
		             console.log('Book item not found:', shelfNum);
		         }
		     } else {
		         console.log('Invalid input for updateBookItem:', { shelfNum, startDate, readPages, totalPages });
		     }
		 }
		 */
		 /*
         function updateBookItem(shelfNum, startDate, readPages, totalPages) {
             if (shelfNum != null && startDate != null && !isNaN(readPages) && !isNaN(totalPages) && totalPages > 0) {
                 let progress = (readPages / totalPages) * 100;
               let formattedProgress = progress.toFixed(2); // Îëê ÏûêÎ¶¨ ÏÜåÏàòÏ†êÍπåÏßÄ Ìè¨Îß∑
               console.log('ÏÜåÏàò'+formattedProgress)

                 let $bookItem = $(`[data-shelf-num="${shelfNum}"]`).closest('.book-item');

                 console.log('Ï±Ö ÏïÑÏù¥ÌÖú ÏóÖÎç∞Ïù¥Ìä∏:', { shelfNum, startDate, readPages, totalPages, progress });

                 $bookItem.find('.start-date').text(startDate);
                 $bookItem.find('.progress-bar')
                     .css('width', `${progress}%`)
                     .attr('aria-valuenow', progress);
                 $bookItem.find('.book-progress').html(
                     `${formattedProgress}% (${readPages}/${totalPages} ÌéòÏù¥ÏßÄ)`
                 );

                 console.log('ÏóÖÎç∞Ïù¥Ìä∏Îêú HTML:', $bookItem.html());
             } else {
                 console.log('Ïú†Ìö®ÌïòÏßÄ ÏïäÏùÄ ÏûÖÎ†• Í∞í:', { shelfNum, startDate, readPages, totalPages });
             }
         } // end of updateBookItem
		 */
		 
		 
         // *************************************
         // [0809 Ï∂îÍ∞Ä] Ï†ïÎ†¨ Î≤ÑÌäº
         
         // Ï†ïÎ†¨ Î≤ÑÌäº ÏöîÏÜå
         const sortButtonsRead = document.querySelectorAll('input[name="sort-read"]'); // ÏùΩÏùÄ Ï±Ö
         const sortButtonsReading = document.querySelectorAll('input[name="sort-reading"]'); // ÏùΩÍ≥† ÏûàÎäî Ï±Ö
         const sortButtonsWish = document.querySelectorAll('input[name="sort-wishlist"]'); // ÏúÑÏãúÎ¶¨Ïä§Ìä∏
         // Ï±Ö ÏÑ§Î™Ö div
         const readBookNav = document.getElementById('nav-read'); // ÏùΩÏùÄ Ï±Ö div
         const readingBookNav = document.getElementById('nav-reading'); // ÏùΩÍ≥† ÏûàÎäî Ï±Ö div
         const wishListNav = document.getElementById('nav-wishlist'); // ÏúÑÏãúÎ¶¨Ïä§Ìä∏ div
         
         console.log("readingBookNav : ", readingBookNav);

         // Ï±Ö Ìï≠Î™©ÏùÑ Î∞∞Ïó¥Î°ú Î≥ÄÌôò
         let readBooks = Array.from(readBookNav.getElementsByClassName('read-books')); // ÏùΩÏùÄ Ï±Ö Ìï≠Î™©
         let readingBooks = Array.from(readingBookNav.getElementsByClassName('reading-books')); // ÏùΩÍ≥† ÏûàÎäî Ï±Ö Ìï≠Î™©
         let wishBooks = Array.from(wishListNav.getElementsByClassName('wish-books')); // ÏúÑÏãúÎ¶¨Ïä§Ìä∏ Ìï≠Î™©

		 // Ï†ïÎ†¨ Î≤ÑÌäº Ïù¥Î≤§Ìä∏ Î¶¨Ïä§ÎÑà Ï∂îÍ∞Ä Ìï®Ïàò
		    function addSortListeners() {
		        $('input[name^="sort-"]').off('click').on('click', function() {
		            console.log("Sort button clicked:", this.id);
		            sortEntries(this.id);
		        });
		    }
		 /*
         // Ï†ïÎ†¨ Î≤ÑÌäº ÌÅ¥Î¶≠ Ïù¥Î≤§Ìä∏Î¶¨Ïä§ÎÑà 
         function addSortListeners(buttons) {
             buttons.forEach(button => {
                 button.addEventListener('click', function() {
                     console.log("Sorting by:", this.id);
                     sortEntries(this.id);
                 });
             });
         }
		 */

         addSortListeners(sortButtonsRead);
         addSortListeners(sortButtonsReading);
         addSortListeners(sortButtonsWish);

         // ÎÇ†Ïßú Î¨∏ÏûêÏó¥ÏùÑ Date Í∞ùÏ≤¥Î°ú Î≥ÄÌôòÌïòÎäî Ìï®Ïàò (Ïó∞-Ïõî-ÏùºÎßå Í≥†Î†§)
         function parseDate(dateString) {
             const [year, month, day] = dateString.split('-').map(Number);
             return new Date(year, month - 1, day);
         }

         // ÏßÑÌñâÎ•† ÌòïÎ≥ÄÌôò Ìï®Ïàò 
         function extractProgress(element) {
             const progressText = element.querySelector('.book-progress')?.textContent.trim();
             if (progressText) {
                 const match = progressText.match(/(\d+(\.\d+)?)%/);
                 return match ? parseFloat(match[1]) : 0;
             }
             return 0;
         }

		 /*
         function sortEntries(order) {
             console.log("Sorting entries...");
             let books;
             let container;

             // [ ÏùΩÏùÄ Ï±Ö ]
             if (order === 'startDateRead' || order === 'endDateRead') {
                 console.log("Read sortEntries");
                 books = readBooks;
                 container = readBookNav.querySelector('#read-list');
             }
             // [ ÏùΩÍ≥† ÏûàÎäî Ï±Ö ]
             else if (order === 'startDateReading' || order === 'readCountReading') {
                 console.log("Reading sortEntries");
                 books = readingBooks;
                 container = readingBookNav.querySelector('#reading-list');
             }
             // [ ÏúÑÏãúÎ¶¨Ïä§Ìä∏ ]
             else if (order === 'alphabeticalWishlist' || order === 'addedDateWishlist') {
                 console.log("Wishlist sortEntries");
                 books = wishBooks;
                 container = wishListNav.querySelector('#wishlist-list');
             }
*/
		// Ï†ïÎ†¨ Ìï®Ïàò ÏàòÏ†ï
		function sortEntries(order) {
		       console.log("Sorting entries...");
		       let books;
		       let container;

		       updateBookArrays(); // Ï†ïÎ†¨ Ï†Ñ Î∞∞Ïó¥ ÏóÖÎç∞Ïù¥Ìä∏

		       // ÌòÑÏû¨ ÌôúÏÑ±ÌôîÎêú ÌÉ≠Ïóê Îî∞Îùº Ï†ÅÏ†àÌïú Ï±Ö Î™©Î°ùÍ≥º Ïª®ÌÖåÏù¥ÎÑà ÏÑ†ÌÉù
		       if ($('#nav-read').hasClass('active')) {
		           books = readBooks;
		           container = $('#read-list');
		       } else if ($('#nav-reading').hasClass('active')) {
		           books = readingBooks;
		           container = $('#reading-list');
		       } else if ($('#nav-wishlist').hasClass('active')) {
		           books = wishBooks;
		           container = $('#wishlist-list');
		       }

		       console.log("Current active tab:", $('.nav-link.active').attr('id'));
		       console.log("Sorting books:", books);

		       if (!books || books.length === 0) {
		           console.log("No books to sort");
		           return;
		       }

			 
             books.sort((a, b) => {
               // [ ÏãúÏûëÏùºÏàú ]
                 if (order === 'startDateRead' || order === 'startDateReading') {
                     const dateA = parseDate(a.querySelector('.book-dates .start-date').textContent.trim());
                     const dateB = parseDate(b.querySelector('.book-dates .start-date').textContent.trim());
                  // Ïò§Î¶ÑÏ∞®Ïàú
                     return dateA - dateB;
                 }
               // [ Ï¢ÖÎ£åÏùºÏàú ]
                 else if (order === 'endDateRead') {
                     const dateA = parseDate(a.querySelector('.book-dates .end-date').textContent.trim());
                     const dateB = parseDate(b.querySelector('.book-dates .end-date').textContent.trim());
                  // ÎÇ¥Î¶ºÏ∞®Ïàú 
                     return dateB - dateA;
                 }
               // [ ÎßéÏù¥ ÏùΩÏùÄ Ïàú ]
                 else if (order === 'readCountReading') {
                     const progressA = extractProgress(a);
                     const progressB = extractProgress(b);
                     console.log("progressA : ", progressA);
                     console.log("progressB : ", progressB);
                     return progressB - progressA; // ÎÇ¥Î¶ºÏ∞®Ïàú Ï†ïÎ†¨ (ÎßéÏù¥ ÏùΩÏùÄ Ïàú)
                 }
                 // [ Í∞ÄÎÇòÎã§ Ïàú ]
               else if (order === 'alphabeticalWishlist'){
                  const titleA = a.querySelector('.book-title').textContent.trim();
                  const titleB = b.querySelector('.book-title').textContent.trim();
                  return titleA.localeCompare(titleB, 'ko-KR');  // ÌïúÍ∏Ä Í∞ÄÎÇòÎã§Ïàú Ï†ïÎ†¨
               }
               // [ Ï∂îÍ∞ÄÎêú ÎÇ†Ïßú Ïàú ] 
               else if (order === 'addedDateWishlist'){
                   const dateA = parseDate(a.querySelector('.book-added-date .added-date').textContent.trim());
                   const dateB = parseDate(b.querySelector('.book-added-date .added-date').textContent.trim());
                   // ÎÇ¥Î¶ºÏ∞®Ïàú
                   return dateB - dateA;
               }
             });

            // ÌôîÎ©¥Ïóê Î∂ôÏù¥Í∏∞ 
             //container.innerHTML = '';
             //books.forEach(entry => container.appendChild(entry));
			 
			 // Ï†ïÎ†¨Îêú Î™©Î°ùÏùÑ ÌôîÎ©¥Ïóê Îã§Ïãú ÌëúÏãú
			 container.empty().append(books);
             console.log("Sorting completed");
         }
		 
		 // ÌÉ≠ Î≥ÄÍ≤Ω Ïù¥Î≤§Ìä∏ Î¶¨Ïä§ÎÑà
		   $('.nav-link').on('shown.bs.tab', function (e) {
		       console.log("Tab changed:", e.target.id);
		       updateBookArrays();
		       addSortListeners();
		   });
		 
			// Ï¥àÍ∏∞ ÏÑ§Ï†ï
			   updateBookArrays();
			   addSortListeners();
         
         
      });
   </script>
         
      
</body>
</html>